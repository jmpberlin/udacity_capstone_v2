version: '2.1'
orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3
jobs:
  linting:
    docker:
      - image: 'cimg/python:3.10'
    steps:
      - checkout
      - run:
          name: Installing Dependencies
          command: |
            sudo apt-get update
            sudo apt-get install python3-venv
      - run:
          name: Linting
          command: |
            make setup
            . .env/bin/activate
            make install
            make lint
  building:
    machine: true
    working_directory: ~/app
    steps:
      - checkout
      - run:
          name: Building Docker Image
          command: |
            docker login -u ${DOCKER_ID} -p ${DOCKER_PWD}
            docker build --tag py-app .
      - run:
          name: Pushing Docker Image to Docker Hub
          command: |
            docker tag py-app:latest jmpberlin/py-app:latest
            docker push jmpberlin/py-app:latest

  # create-deployment:
  #   docker:
  #     - image: 'cimg/python:3.10'
  #   parameters:
  #     cluster-name:
  #       description: |
  #         py-app
  #       type: string
  #     aws-region:
  #       description: |
  #         us-east-1
  #       type: string
  #   steps:
  #     - checkout
  #     - aws-eks/update-kubeconfig-with-authenticator:
  #         cluster-name: << parameters.cluster-name >>
  #         install-kubectl: true
  #     - kubernetes/create-or-update-resource:
  #         get-rollout-status: true
  #         resource-file-path: deployment.yml
  #         resource-name: deployment/nginx
  create-deployment:
    docker:
      - image: 'cimg/python:3.10'
    parameters:
      cluster-name:
        description: |
          py-app
        type: string
      aws-region:
        description: |
          us-east-1
        type: string
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: deployment.yml
          resource-name: deployment/nginx-deployment
workflows:
  deployment:
    jobs:
      # - linting
      # - building:
      #     requires: [linting]
      # - aws-eks/create-cluster:
      #     cluster-name: py-app
      #     requires: [building]
      # - create-deployment:
      #     cluster-name: py-app
      #     aws-region: us-east-1
      #     # requires:
      #     #   - aws-eks/create-cluster
      - aws-eks/update-container-image:
          cluster-name: py-app
          container-image-updates: 'py-app-deployment=jmpberlin/py-app'
          post-steps:
            - kubernetes/delete-resource:
                resource-names: py-app-deployment
                resource-types: deployment
                wait: true
          # requires:
          #   - create-deployment
          resource-name: deployment/py-app
      # - aws-eks/delete-cluster:
      #     cluster-name: flask-app
      #     requires:
      #       - aws-eks/update-container-image
