version: '2.1'

jobs:
  linting:
    docker:
      - image: 'cimg/python:3.10'
    steps:
      - checkout
      - run:
          name: Installing Dependencies
          command: |
            echo "ads"
  building:
    machine: true
    working_directory: ~/app
    steps:
      - checkout
      - run:
          name: Building Docker Image
          command: |
            echo "asd"

  create-deployment:
    docker:
      - image: 'cimg/python:3.10'
    steps:
      - checkout
      - run: |
          name: osiadf
          command: |
            echo "hallo "
  aws-eks/create-cluster:
    docker:
      - image: 'cimg/python:3.10'
    steps:
      - checkout
      - run:
          name: Building Docker Image
          command: |
            echo "asd"
  aws-eks/update-container-image:
    docker:
      - image: 'cimg/python:3.10'
    steps:
      - checkout
      - run:
          name: Building Docker Image
          command: |
            echo "asd"
  testing-cluster:
    docker:
      - image: 'cimg/python:3.10'
    steps:
      - checkout
      - run:
          name: Building Docker Image
          command: |
            echo "asd"
workflows:
  deployment:
    jobs:
      - linting
      - building:
          requires: [linting]
      - aws-eks/create-cluster:
          requires: [building]
      - create-deployment:
          requires: [aws-eks/create-cluster]
      - aws-eks/update-container-image:
          requires: [create-deployment]
      - testing-cluster:
          requires: [aws-eks/update-container-image]

      # - building:
      #     requires: [linting]
      # - aws-eks/create-cluster:
      #     cluster-name: py-app
      #     requires: [building]
      # - create-deployment:
      #     cluster-name: py-app
      #     aws-region: us-east-1
      #     # requires:
      #     #   - aws-eks/create-cluster
      # - aws-eks/update-container-image:
      #     cluster-name: py-app
      #     container-image-updates: 'py-app=jmpberlin/py-app'
      #     post-steps:
      #       - kubernetes/delete-resource:
      #           resource-names: py-app
      #           resource-types: deployment
      #           wait: true
      #     # requires:
      #     #   - create-deployment
      #     resource-name: deployment/py-app-deployment
      # - aws-eks/delete-cluster:
      #     cluster-name: flask-app
      #     requires:
      #       - aws-eks/update-container-image
